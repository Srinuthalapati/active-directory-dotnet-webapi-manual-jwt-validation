// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TodoListService-ManualJwt
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// API specification for python template service
    /// </summary>
    public partial interface IClouddns : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


            /// <summary>
        /// List existing R53 healthchecks.
        /// </summary>
        /// List existing R53 healthchecks.
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,ListHealthchecksHeaders>> ListHealthchecksWithHttpMessagesAsync(string zoneID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create a new R53 healthcheck
        /// </summary>
        /// Create a new R53 healthcheck
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='healthcheckAdd'>
        /// HealthcheckPayload contains all Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,AddHealthcheckHeaders>> AddHealthcheckWithHttpMessagesAsync(string zoneID, string authorization, HealthcheckPayload healthcheckAdd = default(HealthcheckPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get details of a healthcheck
        /// </summary>
        /// Get details of a healthcheck
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='healthcheckID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,GetHealthcheckDetailsHeaders>> GetHealthcheckDetailsWithHttpMessagesAsync(string zoneID, string healthcheckID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete this healthcheck.
        /// </summary>
        /// Delete this healthcheck.
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='healthcheckID'>
        /// A
        /// </param>
        /// <param name='comment'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,DeleteHealthcheckHeaders>> DeleteHealthcheckWithHttpMessagesAsync(string zoneID, string healthcheckID, string comment, string authorization, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update this healthcheck.
        /// </summary>
        /// Update this healthcheck.
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='healthcheckID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='healthcheckUpdate'>
        /// HealthcheckPayload contains all Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,UpdateHealthcheckDetailsHeaders>> UpdateHealthcheckDetailsWithHttpMessagesAsync(string zoneID, string healthcheckID, string authorization, HealthcheckPayload healthcheckUpdate = default(HealthcheckPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List available zones. (Limited by user's rights)
        /// </summary>
        /// List available zones. (Limited by user's rights)
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='token'>
        /// Optional to continue paging through a previous list request
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the returned results
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,ListZoneIdHeaders>> ListZoneIdWithHttpMessagesAsync(string authorization, string token = default(string), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Add Zone. (Only Admins can create)
        /// </summary>
        /// Add Zone. (Only Admins can create)
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='zoneAdd'>
        /// ZoneAddPayload contains all ADD Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,AddZoneHeaders>> AddZoneWithHttpMessagesAsync(string authorization, ZoneAddPayload zoneAdd = default(ZoneAddPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get zone details for this specific zone.
        /// </summary>
        /// Get zone details for this specific zone.
        /// <param name='zoneID'>
        /// zoneID given in the Request Path
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the fields of the returned details
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,GetZoneDetailsHeaders>> GetZoneDetailsWithHttpMessagesAsync(string zoneID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update Zone Details
        /// </summary>
        /// Update Zone Details
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='zoneUpdate'>
        /// ZoneUpdatePayload contains all Update Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,UpdateZoneDetailsHeaders>> UpdateZoneDetailsWithHttpMessagesAsync(string zoneID, string authorization, ZoneUpdatePayload zoneUpdate = default(ZoneUpdatePayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete Zone
        /// </summary>
        /// Delete Zone
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='comment'>
        /// Why this is being deleted.
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,DeleteZoneHeaders>> DeleteZoneWithHttpMessagesAsync(string zoneID, string comment, string authorization, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List All Records in the zone
        /// </summary>
        /// List All Records in the zone
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='token'>
        /// Optional to continue paging through a previous list request
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the fields of the returned details
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,ListZoneRecordsHeaders>> ListZoneRecordsWithHttpMessagesAsync(string zoneID, string authorization, string token = default(string), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// create a record (no approval workflow)
        /// </summary>
        /// create a record (no approval workflow)
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='recordAdd'>
        /// RecordPayload contains all Add Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,CreateZoneRecordHeaders>> CreateZoneRecordWithHttpMessagesAsync(string zoneID, string authorization, RecordPayload recordAdd = default(RecordPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get details of the record
        /// </summary>
        /// Get details of the record
        /// <param name='zoneID'>
        /// A
        /// </param>
        /// <param name='recordID'>
        /// A
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the fields of the returned details
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,GetRecordDetailsHeaders>> GetRecordDetailsWithHttpMessagesAsync(string zoneID, string recordID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete the record (without Approval workflow)
        /// </summary>
        /// Delete the record (without Approval workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='recordID'>
        /// recordID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the fields of the returned details
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,DeleteRecordHeaders>> DeleteRecordWithHttpMessagesAsync(string zoneID, string recordID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update a record (no approval workflow)
        /// </summary>
        /// Update a record (no approval workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='recordID'>
        /// recordID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='recordUpdate'>
        /// RecordPayload contains all Update Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,UpdateRecordDetailsHeaders>> UpdateRecordDetailsWithHttpMessagesAsync(string zoneID, string recordID, string authorization, RecordPayload recordUpdate = default(RecordPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// List of open requests, optionally via filter statement, closed
        /// requests.
        /// </summary>
        /// List of open requests, optionally via filter statement, closed
        /// requests.
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='token'>
        /// Optional to continue paging through a previous list request
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the returned results
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,ListRequestsHeaders>> ListRequestsWithHttpMessagesAsync(string authorization, string token = default(string), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns request details, including approve/deny links.
        /// </summary>
        /// Returns request details, including approve/deny links.
        /// <param name='requestID'>
        /// requestID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='format'>
        /// JSON or HTML - Optionally returns the data in HTML instead of JSON.
        /// </param>
        /// <param name='approvercode'>
        /// An approver code, sent in email for to the designated approver(s.)
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,GetRequestDetailsHeaders>> GetRequestDetailsWithHttpMessagesAsync(string requestID, string authorization, string format = default(string), string approvercode = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Approve or Deny request
        /// </summary>
        /// Approve or Deny request
        /// <param name='requestID'>
        /// requestID
        /// </param>
        /// <param name='action'>
        /// approve or deny
        /// </param>
        /// <param name='approvercode'>
        /// An approver code, previously sent in email for to the designated
        /// approver(s.)
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestApprovalHeaders>> RequestApprovalWithHttpMessagesAsync(string requestID, string action = default(string), string approvercode = default(string), string authorization = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Make a request to create a new record (will follow approval
        /// workflow)
        /// </summary>
        /// Make a request to create a new record (will follow approval
        /// workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='recordAdd'>
        /// RecordPayload contains all Add Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestRecordCreationHeaders>> RequestRecordCreationWithHttpMessagesAsync(string zoneID, string authorization, RecordPayload recordAdd = default(RecordPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Request deletion of the record (with Approval workflow)
        /// </summary>
        /// Request deletion of the record (with Approval workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='recordID'>
        /// recordID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='filter'>
        /// Optional to filter the fields of the returned details
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestRecordDeletionHeaders>> RequestRecordDeletionWithHttpMessagesAsync(string zoneID, string recordID, string authorization, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Request to update a record (with approval workflow)
        /// </summary>
        /// Request to update a record (with approval workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='recordID'>
        /// recordID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='recordUpdate'>
        /// RecordPayload contains all Update Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestRecordUpdationHeaders>> RequestRecordUpdationWithHttpMessagesAsync(string zoneID, string recordID, string authorization, RecordPayload recordUpdate = default(RecordPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Request add of a HealthCheck (with approval workflow)
        /// </summary>
        /// Request add of a HealthCheck (with approval workflow)
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='healthcheckAdd'>
        /// HealthcheckPayload contains all Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestHealthCheckCreationHeaders>> RequestHealthCheckCreationWithHttpMessagesAsync(string zoneID, string authorization, HealthcheckPayload healthcheckAdd = default(HealthcheckPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Request update a HealthCheck (with approval workflow)
        /// </summary>
        /// Request update a HealthCheck (with approval workflow)
        /// <param name='healthcheckID'>
        /// healthcheckID
        /// </param>
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='healthcheckUpdate'>
        /// HealthcheckPayload contains all Body Parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestHealthCheckUpdationHeaders>> RequestHealthCheckUpdationWithHttpMessagesAsync(string healthcheckID, string zoneID, string authorization, HealthcheckPayload healthcheckUpdate = default(HealthcheckPayload), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Request Delete a HealthCheck (with approval workflow)
        /// </summary>
        /// Request Delete a HealthCheck (with approval workflow)
        /// <param name='healthcheckID'>
        /// healthcheckID
        /// </param>
        /// <param name='zoneID'>
        /// zoneID
        /// </param>
        /// <param name='comment'>
        /// comment
        /// </param>
        /// <param name='authorization'>
        /// CloudAPI Login Authorization
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Result,RequestHealthCheckDeletionHeaders>> RequestHealthCheckDeletionWithHttpMessagesAsync(string healthcheckID, string zoneID, string comment, string authorization, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
